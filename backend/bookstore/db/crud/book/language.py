from uuid import UUID

from sqlmodel import Session, select

from bookstore.db.models.book.language import Language
from bookstore.db.schemas.book.language import LanguageCreate


def get_languages(session: Session, skip: int = 0, limit: int = 100) -> list[Language]:
    """Get languages."""
    statement = select(Language).offset(skip).limit(limit)
    return session.exec(statement).all()


def get_language(session: Session, language_id: UUID) -> Language | None:
    """Get an language by ID."""
    language = session.get(Language, language_id)
    if not language:
        return None
    return language


def create_language(session: Session, language_in: LanguageCreate) -> Language:
    """Create a new language."""
    language = Language(**language_in.dict())

    session.add(language)
    session.commit()
    session.refresh(language)  # refresh to get autogenerated fields like id

    return language


def update_language(
    session: Session, language_id: str, name: str, code: str
) -> Language | None:
    """Update an language by ID."""
    language = get_language(session=session, language_id=language_id)
    if not language:
        return None
    language.name = name
    language.code = code
    session.add(language)
    session.commit()
    session.refresh(language)
    return language


def delete_language(session: Session, language_id) -> Language:
    """Delete an language by ID."""
    language = get_language(session=session, language_id=language_id)
    if not language:
        return None
    session.delete(language)
    session.commit()
    return language
